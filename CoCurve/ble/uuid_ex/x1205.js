var devId="";function getElmt(e){return document.getElementById(e)}function getV(e){return getElmt(e).value.trim()}function setV(e,t){getElmt(e).value=t}var bleService="225753b0-688a-4a2f-ad88-067157ac29e8";var japlCharacter="225753b1-688a-4a2f-ad88-067157ac29e8";var jtlkCharacter="225753b2-688a-4a2f-ad88-067157ac29e8";var bleServer;var bleServiceFound;var japlFound;var jtlkFound;function isWebBluetoothEnabled(){if(!navigator.bluetooth){window.alert("使用的瀏覽器未支援WebBLE功能!");return false}return true}function connectToDevice(){console.log("Initializing Bluetooth...");navigator.bluetooth.requestDevice({filters:[{services:[bleService]}]}).then(e=>{console.log("Device Selected:",e.name);devId=e.name;var t=getElmt("devId");t.innerText=devId;t.style.color="darkblue";e.addEventListener("gattserverdisconnected",onDisconnected);return e.gatt.connect()}).then(e=>{bleServer=e;console.log("Connected to GATT Server");return bleServer.getPrimaryService(bleService)}).then(e=>{bleServiceFound=e;console.log("Service discovered:",e.uuid);return e.getCharacteristic(japlCharacter)}).then(e=>{japlFound=e;var t=getElmt("btnChk");t.disabled=false;t.style.color="white"}).catch(e=>{console.log("Error: ",e)})}function onDisconnected(e){var t=getElmt("btnChk");t.disabled=true;t.style.color="black";var n=getElmt("devId");n.innerText="設備已離線";n.style.color="red"}function disconnectDevice(){console.log("Disconnect Device.");if(is_ble_connected()){if(japlFound){japlFound.stopNotifications().then(()=>{console.log("Notifications Stopped");return bleServer.disconnect()}).then(()=>{console.log("Device Disconnected")}).catch(e=>{console.log("An error occurred:",e)})}else{console.log("No characteristic found to disconnect.")}}else{console.error("Bluetooth is not connected.")}}function get_uid(){return devId}function is_ble_connected(){return bleServer&&bleServer.connected}function read_jtlk(){if(is_ble_connected()){bleServiceFound.getCharacteristic(jtlkCharacter).then(e=>{return e.readValue()}).then(e=>{const t=(new TextDecoder).decode(e);console.log(t);wasmBindings.jtlk_parse(t)})}}function write_jtlk(n,e){e=e||0;setTimeout(()=>{if(is_ble_connected()){bleServiceFound.getCharacteristic(jtlkCharacter).then(e=>{const t=(new TextEncoder).encode(n);return e.writeValue(t)}).then(()=>{setTimeout(()=>{read_jtlk()},1e3)}).catch(e=>{console.error("Error writing to the jtlk characteristic: ",e);return false});return true}else{console.error("Bluetooth is not connected. Cannot write to characteristic.")}},e*1e3)}setTimeout(function(){getElmt("bleConn").addEventListener("click",e=>{if(isWebBluetoothEnabled()){connectToDevice()}});var e=getElmt("btnChk");e.disabled=true},300);